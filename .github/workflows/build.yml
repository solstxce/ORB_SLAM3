name: Build ORB-SLAM3 for ARM64 (Raspberry Pi 3B+)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build in ARM64 environment
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: false
          load: true
          tags: orb-slam3-arm64:latest
      
      - name: Run build process in container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace orb-slam3-arm64:latest /bin/bash -c "
          cd /workspace &&
          
          # Install dependencies
          sudo apt-get update &&
          sudo apt-get install -y libboost-all-dev libboost-dev libssl-dev libpython2.7-dev libeigen3-dev ninja-build &&
          
          # Build Pangolin
          git clone https://github.com/stevenlovegrove/Pangolin &&
          cd Pangolin &&
          ./scripts/install_prerequisites.sh recommended &&
          cmake -B build -GNinja &&
          cmake --build build &&
          cd .. &&
          
          # Install OpenCV
          wget https://github.com/prepkg/opencv-raspberrypi/releases/download/4.6.0/opencv_64.deb &&
          sudo dpkg -i opencv_64.deb &&
          
          # Build ORB-SLAM3 dependencies
          cd Thirdparty/DBoW2 &&
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release &&
          cmake --build build --parallel &&
          cd ../g2o &&
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release &&
          cmake --build build --parallel &&
          cd ../Sophus &&
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release &&
          cmake --build build --parallel &&
          cd ../.. &&
          
          # Uncompress vocabulary
          cd Vocabulary &&
          tar -xf ORBvoc.txt.tar.gz &&
          cd .. &&
          
          # Build ORB-SLAM3
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release &&
          cmake --build build --parallel 4
          "
      
      - name: Extract pypangolin wheel
        run: |
          docker cp $(docker ps -lq):/workspace/Pangolin/build/unknown-unknown.whl ./pypangolin-0.9.2-py3-none-any.whl.whl
      
      - name: Upload ORB-SLAM3 binaries
        uses: actions/upload-artifact@v3
        with:
          name: orb_slam3_binaries
          path: build/
          retention-days: 7
      
      - name: Upload pypangolin wheel
        uses: actions/upload-artifact@v3
        with:
          name: pypangolin_wheel
          path: pypangolin-0.9.2-py3-none-any.whl
          retention-days: 7
